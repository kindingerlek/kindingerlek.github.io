---
import ImageSrc from '@/components/ImageSrc.astro'
import type { JobExperience } from './ExperienceSection.types'
import Role from './Role.astro'
import LinkButton from '@/components/LinkButton.astro'
import { getFormattedDateSpan } from '@/utils/date'

export interface Props extends JobExperience {}

const { image, company, roles, links } = Astro.props

const minDate: Date = roles
	.flatMap((role) => role.dates)
	.reduce((min, date) => (date[0] < min ? date[0] : min), new Date())

const maxDate: Date = roles
	.flatMap((role) => role.dates)
	.reduce((max, date) => (!!date[1] && date[1] > max ? date[1] : max), new Date(0))

const timeSpan = getFormattedDateSpan(minDate, maxDate)
---

<div class='z-10 rounded-2xl border border-border bg-primary-foreground py-5'>
	<div
		class={'flex flex-row items-start gap-4 px-5' /*TODO: add `sticky top-4 z-10`, but need to fix background*/}
	>
		<div class='relative flex-shrink-0'>
			<ImageSrc src={image} alt={company} class='h-12 w-12 rounded-md' />
		</div>
		<div class='flex w-full flex-col gap-y-3'>
			<div class='flex flex-col items-start justify-between sm:flex-row'>
				<div>
					<h2 class='text-lg font-bold'>{company}</h2>
					<p class='text-sm text-zinc-500 dark:text-zinc-400'>
						{timeSpan}
					</p>
				</div>
				{
					links?.length > 0 && (
						<div class='my-2 hidden flex-row gap-3 sm:my-0 sm:flex'>
							{links.map((link) => (
								<LinkButton {...link} />
							))}
						</div>
					)
				}
			</div>
		</div>
	</div>

	<div class='timeline_container mt-4 flex flex-col gap-y-3'>
		{roles.map((role) => <Role {...role} />)}
	</div>
</div>
