---
import ImageSrc from '@/components/ImageSrc.astro'
import Description from '@/components/Description.astro'
import type { Diploma } from './EducationSection.types'
import { getFormattedDateSpan } from '@/utils/date'
import LinkButton from '@/components/LinkButton.astro'

interface Props extends Diploma {}

const { title, institution, image, dates, description, links, status } = Astro.props

const startDate = dates[0].toLocaleDateString('en-US', {
	year: 'numeric',
	month: 'short'
})

const endDate = dates[1]?.toLocaleDateString('en-US', {
	year: 'numeric',
	month: 'short'
})

let endDateString = endDate ?? 'Present'
let timeSpan = `(${getFormattedDateSpan(dates[0], dates[1] ?? new Date())})`

if (status === 'dropped-out') {
	endDateString = 'Not Completed'
	timeSpan = ''
}
---

<div class='relative rounded-2xl border border-border bg-primary-foreground px-5 py-3'>
	<div class='flex flex-row items-start gap-4'>
		<div class='relative flex-shrink-0'>
			<ImageSrc src={image} alt={institution} class='h-12 w-12 rounded-md' />
		</div>
		<div class='flex w-full flex-col gap-y-3'>
			<div class='flex items-start justify-between'>
				<div>
					<h2 class='text-lg font-bold'>{institution}</h2>
					<p class='text-sm text-zinc-500 dark:text-zinc-400'>
						{startDate} - {endDateString}
						{timeSpan}
					</p>
				</div>
				{
					links?.length > 0 && (
						<div class='flex flex-nowrap gap-3'>
							{links.map((link) => (
								<LinkButton {...link} />
							))}
						</div>
					)
				}
			</div>

			<div class='flex flex-col gap-y-1'>
				<h3 class='font-semibold'>{title}</h3>
				{
					description && (
						<p class='text-justify'>
							<Description
								content={description}
								classList={['list-disc', 'text-muted-foreground']}
							/>
						</p>
					)
				}
			</div>
		</div>
	</div>
</div>
