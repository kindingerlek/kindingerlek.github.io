---
import type { HTMLTag, Polymorphic } from 'astro/types'

import FormattedDate from '../FormattedDate.astro'
import { CollectionLinkMap, type ContentEntry } from '@/content/config'

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	content: ContentEntry
	withDesc?: boolean
}

const { as: Tag = 'div', withDesc = false, content } = Astro.props as unknown as Props<any>
const contentDate = content.data.updatedDate ?? content.data.publishDate
---

<li class='flex flex-col gap-2 sm:flex-row sm:gap-x-4 [&_q]:basis-full'>
	<FormattedDate class='min-w-[120px]' date={contentDate} />

	<Tag>
		{content.data.draft && <span class='text-red-500'>(Draft) </span>}
		<a
			data-astro-prefetch
			href={`${CollectionLinkMap[content.collection].url}/${content.slug}/`}
			class='transition-all hover:text-muted-foreground'
		>
			{content.data.title}
		</a>
		{
			withDesc && (
				<p class='line-clamp-3 block text-sm italic text-muted-foreground'>
					{content.data.description}
				</p>
			)
		}
	</Tag>
</li>
